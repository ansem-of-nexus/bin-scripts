#!/bin/bash
function help_screen () {
  echo "Usage: script [option]"
  echo ""
  echo ""
  exit 0;} #function help_screen () {
# making loops ignore spaces
IFS=$(echo -en "\n\b")
# setting variables and checking for them
#declare -r script="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/$(basename "${BASH_SOURCE[0]}")"
#declare -r script_name="$(basename "${BASH_SOURCE[0]}")"
#----------
# clearing variables
#----------
write_to=""
read_from=""
#----------
# script aurgument reading
#----------
while getopts ":hw:r:" opt; do
  case $opt in
    h) help_screen
      exit 0 ;;
    w) declare -r write_to="${OPTARG}";;
    r) declare -r read_from="${OPTARG}";;
    # error handling
    \?) echo "Invalid option: -$OPTARG" >&2
      help_screen
      exit 1 ;;
    :) echo "Option -$OPTARG requires an argument." >&2
      help_screen
      exit 1 ;;
  esac #case $opt in
done #while getopts ":h" opt; do
if [[ ! -z "$write_to" && ! -z "$read_from" ]]; then
  sudo dd bs=4M if=$read_from of=$write_to conv=fdatasync status="progress"
  exit 0
fi #if [[ -z "$write_to" && -z "$read_from" ]]; then
#####
# end of script
#####
echo "ERROR: end of script reached"
exit 1
