#!/bin/bash
#~ echo "load help_screen"
function help_screen () {
  echo "Usage: script [option]"
  echo "    -h for this screen"
  echo "    -c check if srcipt's external commands are installed"
  echo "    -t list filetypes supported by this script"
  echo ""
  echo "-l lists archive's contents in less -S'"
  echo "-d 'path' have script look at a directory"
  echo "  recursively scans directory and uncompress files"
  echo "-n no recursive folder scan"
  echo "-f single file"
  echo "" ; exit 0 ;} #function help_screen () {
function file_types () {
  echo "File types"
  echo "  Tarballs"
  echo "    *.tar"
  echo "    *.tar.bz2"
  echo "    *.tar.gz | *.tgz"
  echo "    *.tar.xz"
  echo "  Singles"
  echo "    *.7z"
  echo "    *.bz2"
  echo "    *.gz"
  echo "    *.rar | cbr"
  echo "    *.zip | cbz"
  echo "" ; exit 0 ;} #function file_types () {
#--------#
# clearing/Setting variables
# change to "1" to manually approve
#----------
cc_tar=""
cc_7za="" ; cc_7zz=""
cc_bz=""
cc_gz=""
cc_unar="" ; cc_unrar=""
cc_zip=""
max_depth=""
individual_folders=""
#--------# Scirpt Information / Input Handling #--------#
IFS=$(echo -en "\n\b") ## making loops ignore spaces
declare -r script="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/$(basename "${BASH_SOURCE[0]}")"
#declare -r script_name="$(basename "${BASH_SOURCE[0]}")"
#declare -r script_optarg="$(basename "${BASH_SOURCE[@]}")"
#--------#
# Functions
#--------#
function file_logic () { command_check
  case "$1" in
    #--------# tar balls #--------#
    *.tar) echo "tar ball found"
      if [[ ! $cc_7za = "" ]]; then 7za x "$1";
        elif [[ ! $cc_7zz = "" ]]; then 7zz x "$1";
        elif [[ ! $cc_tar = "" ]]; then tar -xvf "$1";
        else echo "No Command found to unpack tar file";fi ;;
    *.tar.bz2) echo "tar ball compressed with bzip found"
      if [[ ! $cc_7za = "" ]]; then 7za x "$1";
        elif [[ ! $cc_7zz = "" ]]; then 7zz x "$1";
        elif [[ ! $cc_tar = "" ]]; then tar -xvjf "$1";
        else echo "No Command found to unpack tar file";fi ;;
    *.tar.gz|*.tgz) echo "tar ball compressed with gunzip found"
      if [[ ! $cc_7za = "" ]]; then 7za x "$1";
        elif [[ ! $cc_7zz = "" ]]; then 7zz x "$1";
        elif [[ ! $cc_tar = "" ]]; then tar -xvzf "$1";
        else echo "No Command found to unpack tar file";fi ;;
    *.tar.xz) echo "tar ball compressed with xz found"
      if [[ ! $cc_7za = "" ]]; then 7za x "$1";
        elif [[ ! $cc_7zz = "" ]]; then 7zz x "$1";
        elif [[ ! $cc_tar = "" ]]; then tar -xvJf "$1";
        else echo "No Command found to unpack tar file";fi ;;
    #--------# single types #--------#
    *.7z) echo "7-Zip found"
      if [[ ! $cc_7za = "" ]]; then 7za x "$1";
        elif [[ ! $cc_7zz = "" ]]; then 7zz x "$1";
        else echo "No Command found to unpack 7z file";fi ;;
    *.bz2) echo "bzip found"
      if [[ ! $cc_7za = "" ]]; then 7za x "$1";
        elif [[ ! $cc_7zz = "" ]]; then 7zz x "$1";
        elif [[ ! $cc_bz = "" ]]; then bzip2 -dk "$1";
        else echo "No Command found to unpack bzip file";fi ;;
    *.gz) echo "gunzip found"
      if [[ ! $cc_7za = "" ]]; then 7za x "$1";
        elif [[ ! $cc_7zz = "" ]]; then 7zz x "$1";
        elif [[ ! $cc_gz = "" ]]; then gzip -d "$1";
        else echo "No Command found to unpack gzip file";fi ;;
    *.rar|*.cbr) echo "rar found"
      if [[ ! $cc_7za = "" ]]; then 7za x "$1";
        elif [[ ! $cc_7zz = "" ]]; then 7zz x "$1";
        elif [[ ! $cc_unrar = "" ]]; then unrar "$1";
        elif [[ ! $cc_unar = "" ]]; then unar "$1";
        else echo "No Command found to unpack rar file";fi ;;
    *.zip|*.cbz) echo "zip found"
      if [[ ! $cc_7za = "" ]]; then 7za x "$1";
        elif [[ ! $cc_7zz = "" ]]; then 7zz x "$1";
        elif [[ ! $cc_zip = "" ]]; then unzip "$1";
        else echo "No Command found to unpack zip file";fi ;;
    *) echo "file not reconized" ;;
  esac ;} ## fucntion file_logic () {
function directory_logic () {
  while read l; do
    if [ -d "$dir_path$l" ]; then
      echo "'$dir_path$l' is a dir"
      if [ -z $max_depth ];then eval $script -d "$dir_path$l";fi
    else echo "'$dir_path$l' is a file"
      file_logic "$dir_path$l"
    fi #if [ -d $line ]; then
  done <<< "$(ls --group-directories-first -1 $dir_path)" #while read line; in
  } ## function directory_logic () {
function command_logic () {
  } ## function command_logic () {
function command_check () {
  if [[ ! "$(type -t 7zz)" = "" ]]; then declare -r cc_7zz=1
    if [ "$1" = "print" ]; then echo "7zz Found for 7zip files" ;fi
  elif [[ ! "$(type -t 7za)" = "" ]]; then declare -r cc_7za=1
    if [ "$1" = "print" ]; then echo "7za Found for 7zip files" ;fi ;fi
  if [[ ! $cc_7zz = "1" && ! $cc_7za = "1" ]]; then
    if [[ ! "$(type -t tar)" = "" ]]; then declare -r cc_tar=1
      if [ "$1" = "print" ]; then echo "tar Found for Tarball files" ;fi ;fi
    if [[ ! "$(type -t bzip2)" = "" ]]; then declare -r cc_bzip=1
      if [ "$1" = "print" ]; then echo "bzip2 Found for bzip files" ;fi ;fi
    if [[ ! "$(type -t gzip)" = "" ]]; then declare -r cc_gzip=1
      if [ "$1" = "print" ]; then echo "gzip Found for Gunzip files" ;fi ;fi
    if [[ ! "$(type -t unrar)" = "" ]]; then declare -r cc_unrar=1
      if [ "$1" = "print" ]; then echo "unrar Found for rar files" ;fi
    elif [[ ! "$(type -t unar)" = "" ]]; then declare -r cc_unar=1
      if [ "$1" = "print" ]; then echo "unar Found for rar files" ;fi ;fi
    if [[ ! "$(type -t unzip)" = "" ]]; then declare -r cc_zip=1
      if [ "$1" = "print" ]; then echo "unzip Found for zip files" ;fi ;fi
  fi ## if [[ ! $cc_7zz = "1" && ! $cc_7za = "1" ]]; then
  } ## function command_check () {
function contents () { case "$1" in
    #--------# tar balls #--------#
    *.tar) tmp_command "$1";;
    *.tar.bz2) tmp_command "$1";;
    *.tar.gz|*.tgz) tmp_command "$1";;
    *.tar.xz) tmp_command "$1";;
    #--------# single types #--------#
    *.7z) tmp_command "$1";;
    *.bz2) tmp_command "$1";;
    *.gz) tmp_command "$1";;
    *.rar|*.cbr) tmp_command "$1";;
    *.zip|*.cbz) unzip -l "$1"|less -S;;
    *) echo "file not reconized";;
  esac ; exit 0 ;}
while getopts ":hcl:d:nstf:" opt; do case $opt in
    #--------# Help / Command Check #--------#
    h) help_screen ; exit 0 ;;
    c) command_check "print" ; exit 0 ;;
    #--------# Setting values #--------#
    n) max_depth=1;;
    s) individual_folders=1;;
    t) file_types;;
    #--------# Script Commands #--------#
    l) contents "${OPTARG}";;
    d) case "${OPTARG}" in */)dir_path="${OPTARG}";; *)dir_path="${OPTARG}/";; esac
      directory_logic ; exit 0 ;;
    f) file_logic "${OPTARG}" ; exit 0 ;;
    #--------# Error Handling #--------#
    \?) echo "Invalid option: -$OPTARG" >&2
      help_screen ; exit 1 ;;
    :) echo "Option -$OPTARG requires an argument." >&2
      help_screen ; exit 1 ;;
  esac ; done #while getopts ":hc" opt; do
#--------#
# end of script
#--------#
echo "ERROR: end of script reached" ; exit 1
#--------#
# To-Do List
#--------#
# finish contents commands
